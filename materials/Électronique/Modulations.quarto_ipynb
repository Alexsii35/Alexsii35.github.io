{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title : Modulations analogique et numérique\n",
        "author : Alexis HOBL\n",
        "date : today\n",
        "\n",
        "\n",
        "format: dashboard\n",
        "\n",
        "server: shiny\n",
        "\n",
        "editor : \n",
        " render-on-save : true\n",
        "---\n",
        "\n",
        "\n",
        "# Un petit peu d'histoire\n",
        "\n",
        "## Les ondes électromagnétiques\n",
        "\n",
        "* 1865 : James Clerk Maxwell unifie l'électromagnétisme à l'aide de huits équations. Oliver Heaviside réécrit ces équations en 1884 sous forme de quatre équations vectorielles.\n",
        "\n",
        "* 1887 : Heinrich Hertz vérifie expérimentalement la théorie de Maxwell, selon laquelle la lumière est une onde électromagnétique. \n",
        "\n",
        "## Les télécommunications sans fil\n",
        "\n",
        "* 23 Décembre 1900 : Reginald Fessenden transmet la voix humaine pour la première fois de l'histoire grâce à de la modulation d'amplitude (AM). C'est le début des télécommunications sans fil.\n",
        "\n",
        "* 1901 : Guglielmo Marconi réalise la première transmission radio transatlantique. Cet exploit lui a valu le prix Nobel de Physique de 1909 partagé avec Karl Ferdinand Braun. \n",
        "\n",
        "* 192X : Jhon Renshaw Carson publie sa théorie mathématiques sur la modulation de fréquence (FM). Edwin Howard Armstrong met au point un récépteur hétérodyne permettant de faire de la modulation de fréquence.\n",
        "\n",
        "* 1938 : Alec Reeves brevete son invention de modulation d'impulsion codée permettant de réduire le bruit de la voix transmise sur e longue distance.\n",
        "\n",
        "* 1948 : Claude Shannon publie \"A Mathematical Theory of Communication\" établissant les principes de base mathématiques de la communication numérique.\n",
        "\n",
        "\n",
        "# Prérequis\n",
        "\n",
        "* Trigonométrie\n",
        "\n",
        "* Analyse spectrale \n",
        "\n",
        "* Modèle OSI\n",
        "\n",
        "# Définitions\n",
        "\n",
        "***Système de communication***\n",
        ": On définit un ***système de communication*** comme étant l'ensemble des système composé d'une source d'information via un récepteur via le passage d'un canal de transmission. \n",
        "\n",
        "\n",
        "```{mermaid}\n",
        "flowchart LR\n",
        "A(Source) -- Message émis --> B(Canal de transmission) -- Message transmis --> C(Récepteur)\n",
        "D(Perturbations) ==> B\n",
        "```\n",
        "\n",
        "\n",
        "***Canal de transmission***\n",
        ": On définit un ***canal de transmission*** comme étant tout support physique à travers lequel l'information est transmise. \n",
        "Ce support peut être \n",
        "* Hertzien (air principalement)\n",
        "* Filaire à support électrique (câble coaxial, lignes torsadées, ...)\n",
        "* Filaire à support optique (fibre optique, guide d'ondes, ...)\n",
        "\n",
        "Un canal de transmission est défini par deux caractéristiques :\n",
        "1. Sa bande passante.\n",
        "2. Son bruit.\n",
        "\n",
        "\n",
        "***Modulation***\n",
        ": Opération consistant à reporter le spectre d'un signal dans un domaine fréquentiel favorable à sa transmission. Il faut adapter le signal au canal auquel il est confronté.\n",
        "\n",
        "***Signal analogique***\n",
        ": Un signal est analogique si $s(t) : t \\in X \\subseteq \\mathbb{R}$ et lorsqu'il ne dépend que d'une variable indépendante.\n",
        "\n",
        "# Modulation analogique\n",
        "\n",
        "La modulation est dite analogique si le signal transmis via le canal reste analogique durant tout le processus de transmission.\n",
        "\n",
        "## Modulation d'amplitude (AM)\n",
        "\n",
        "La modulation d'amplitude est une modulation qui consiste à faire varier l'amplitude d'une porteuse à la même fréquence qu'un signal modulant.\n",
        "\n",
        "***Notations***\n",
        ": On appelle :\n",
        "* Porteuse le signal $p(t) = A_p cos(\\omega_p t +\\varphi_p))$.\n",
        "* m(t) le signal modulant. Ce signal contient l'information\n",
        "* s(t) le signal modulé en amplitude.\n",
        "\n",
        "### Bande Latérale Unique (BLU)\n",
        "\n",
        "\n",
        "### Double bande latérale (DSB)\n",
        "On distingue deux types de modulation d'amplitude à double bande latérale : \n",
        "\n",
        "* La modulation d'amplitude Double Bande Avec Porteuse (DBAP)\n",
        "\n",
        "* La modulation d'amplitude Double Bande Sans Porteuse (DBSP)\n",
        "\n",
        "L'expression générale du signal modulé est donnée par :\n",
        "\n",
        " $$f[m(t)]cos(\\omega_p t + \\varphi_p)$$\n",
        "\n",
        "Avec $f[m]$ une fonction affine.\n",
        "\n",
        "Il est alors possible d'écrire l'expression du signal modulé pour la AM-DBAP et la AM-DBSP.\n",
        "\n",
        "***AM-DBAP***\n",
        ": $s(t) = A_p[1+k\\cdot m(t)]cos(\\omega_p + \\varphi_p)$\n",
        "\n",
        "***AM-DBSP***\n",
        ": $s(t) = A_p\\cdot k\\cdot m(t)cos(\\omega_p + \\varphi_p)$\n",
        "\n",
        "\n",
        "L'emploi d'une fonction $f$ linéaire permet de considérer un signal modulant périodique comme une somme de signal sinusoïde. Le principe de superposition peut alors s'apppliquer.\n",
        "\n",
        "**On considérere par la suite que $\\varphi_p = 0$**.\n",
        "\n",
        "#### \n",
        "\n",
        "\n",
        "<!-- ```{shinylive-python} -->"
      ],
      "id": "aa101316"
    },
    {
      "cell_type": "code",
      "metadata": {
        "context": "server",
        "viewerHeight": 600,
        "viewerWidth": 700
      },
      "source": [
        "#####| standalone: true\n",
        "from shiny import App, render, ui\n",
        "import numpy as np\n",
        "#from scipy import signal\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "app_ui = ui.page_fluid(\n",
        "    ui.layout_sidebar(\n",
        "        ui.sidebar(\n",
        "            ui.input_slider(\"f_porteuse\", \"Fréquence_porteuse\", 0, 50, 10, step=1),\n",
        "            ui.input_slider(\"f_modulant\", \"Fréquence_modulant\", 0, 5, 1, step=0.1),\n",
        "            ui.input_slider(\"amplitude\", \"Amplitude\", 0, 2, 1, step=0.25),\n",
        "            ui.input_slider(\"shift\", \"Déphasage\", -2*3.14, 2*3.14, 0, step=0.1),\n",
        "            ui.input_slider(\"m\", \"Indice de modulation\", -5, 5, 0.5, step=0.1),\n",
        "        ),\n",
        "    ui.output_plot(\"plot\"),\n",
        "    ), \n",
        ")\n",
        "\n",
        "def server(input, output, session):\n",
        "    @output\n",
        "    @render.plot(alt=\"Sine function\")\n",
        "    def plot():\n",
        "        t = np.arange(0.0, 4.0, 0.0001) # vecteur de temps\n",
        "\n",
        "        p = input.amplitude()*np.sin((2 * np.pi * input.f_porteuse()) * (t - input.shift() / 2)) # porteuse\n",
        "\n",
        "        m = input.amplitude()*np.sin((2*np.pi*input.f_modulant()) * (t - input.shift() / 2)) # signal modulant sinus\n",
        "\n",
        "        #carre = input.amplitude()*signal.square((2*np.pi*input.f_modulant()) * (t - input.shift() / 2)) # signal modulant carré\n",
        "        \n",
        "        s_sinus = input.amplitude()*(1+input.m()*m)*np.sin((2 * np.pi * input.f_porteuse()) * (t - input.shift() / 2)) #signal modulé\n",
        "        \n",
        "        #s_carre = input.amplitude()*(1+input.carre()*m)*np.sin((2 * np.pi / input.period_porteuse()) * (t - input.shift() / 2)) #signal modulé\n",
        "\n",
        "        e_sinus = input.amplitude()*(1+input.m()*m) # enveloppe supérieure\n",
        "\n",
        "        #e_carre = input.amplitude()*(1+input.m()*carre) # enveloppe supérieure\n",
        "\n",
        "        fig, axs = plt.subplots(3, 1)\n",
        "\n",
        "        axs[0].plot(t, p, label = 'Porteuse')\n",
        "        axs[0].set_ylim([-2*input.amplitude(), 2*input.amplitude()])\n",
        "        axs[0].legend()\n",
        "        axs[0].grid()\n",
        "\n",
        "        \n",
        "        axs[1].plot(t, m, label = 'Modulant sinusoïdal')\n",
        "        axs[1].set_ylim([-2*input.amplitude(), 2*input.amplitude()])\n",
        "        axs[1].legend()\n",
        "        axs[1].grid()\n",
        "\n",
        "        \"\"\"\n",
        "        axs[2].plot(t, carre, label = 'Modulant carré')\n",
        "        axs[2].set_ylim([-2*input.amplitude(), 2*input.amplitude()])\n",
        "        axs[2].legend()\n",
        "        axs[2].grid()\n",
        "        \"\"\"\n",
        "\n",
        "        axs[2].plot(t, e_sinus, label = 'Enveloppe')\n",
        "        axs[2].set_ylim([-2*input.amplitude(), 2*input.amplitude()])\n",
        "        axs[2].plot(t, s_sinus, label = 'Signal modulé')\n",
        "        axs[2].legend()\n",
        "        axs[2].grid()\n",
        "\n",
        "        \"\"\"\n",
        "        axs[4].plot(t, e_carre, label = 'Enveloppe')\n",
        "        axs[4].set_ylim([-2*input.amplitude(), 2*input.amplitude()])\n",
        "        axs[4].plot(t, s_carre, label = 'Signal modulé')\n",
        "        axs[4].legend()\n",
        "        axs[4].grid()\n",
        "        \"\"\"\n",
        "        \n",
        "app = App(app_ui, server)"
      ],
      "id": "ee3e6597",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Modulation de fréquence\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Modulation de phase\n",
        "\n",
        "\n",
        "# Modulation numérique\n",
        "\n",
        "La modulation est dite analogique si le signal est discrétisé avant sa transmission via le canal.\n",
        "\n",
        "## PSK\n",
        "\n",
        "\n",
        "## FSK\n",
        "\n",
        "\n",
        "## Modulations complexes\n",
        "\n",
        "### QAM\n",
        "\n",
        "## MSK\n",
        "\n",
        "### GMSK\n",
        "\n",
        "\n",
        "## Delta-Sigma \n",
        "\n",
        "\n",
        "## Modulation multi-porteuses"
      ],
      "id": "9863eb71"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "D:\\Anaconda\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}